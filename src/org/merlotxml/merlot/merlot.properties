###############################################################
# Xerlin properties file
#
# For the Xerlin XML editor 
#
# Copyright (C) 1999, Channelpoint, Inc. All Rights Reserved
#
###############################################################
#

#################
# General stuff
#################

# Locale override if you want to override your default locale
#
#country=FR
#language=fr

#
# classpath-like path to common directories that contains DTD files
#
# example:
# path.dtd=/home/user/dtd
path.dtd=dtd

#
# Background color
# propname: background.color
#  default: 0xffffff
#
# background.color = 0xffffff

#
# Picture for the background
# propname: background.picture
#  default: chptlogo.gif
#
# background.picture = chptlogo.gif
background.picture = xerlin.gif

#
# Splash screen
# default: xerlinsplash.gif
# xerlin.splashscreen = xerlinsplash.gif


#
# Application icons
# default: xerlin16icon.gif
# default: xerlin32icon.gif
# app.icon.s = xerlin16icon.gif
# app.icon.l = xerlin32icon.gif
#

# 
# Frame title
# propname: frame.title
#  default: Xerlin
#
frame.title = Xerlin 

#
# Frame inset from the sides of the screen
# propname: frame.inset
#  default: 75
#
# frame.inset = 75

#
# Frame displacement from top and bottom of screen (to allow room for 
# stuff like the gnome panel at the bottom of the screen
#
# top.displace = 0
# bot.displace = 75
#

#
# XML Dom Liaison class.
# propname: xml.dom.liaison
#     type: classname string
#  default: org.merlotxml.util.xml.xml4j.DOMLiaison
#
#xml.dom.liaison = org.merlotxml.util.xml.xml4j.DOMLiaison
xml.dom.liaison = org.merlotxml.util.xml.xerces.DOMLiaison

#
# Whether or not to filter nodes in the tree views
# propname: merlot.filternodes
#     type: boolean
#  default: true
#
# merlot.filternodes = false
merlot.filternodes = true

#
# Turn on debugging
# propname: merlot.debug
#     type: boolean
#  default: false
#
merlot.debug = true

# 
# allow plugins to filter the Add-> menu
# propname: merlot.filteradds
#     type: boolean
#  default: true
#
merlot.filteradds = true

#
# Whether or not to write default attributes out to file
# Default behaviour is to not write default attributes
# may want to force this true for use in applications
# that do not validate against a DTD
# 
# propname: merlot.write.default-atts
#  type: boolean
#  default: false
#
# merlot.write.default-atts = true

# Automatically add compulsory nodes
# propname: merlot.auto.add.nodes
# default: false
#
#merlot.auto.add.nodes = false


#
# Default library file to open
# propname: merlot.default.library
#
#merlot.default.library = lib/lib.xmllib

# default look and feel
# propname: merlot.default.lookandfeel
# values: default = platform default
# default: windows
merlot.default.lookandfeel = default


# Preference dialog will only show properties 
# which start with merlot.prefs.filter's value
#
# If merlot.prefs.filter is equal to nothing it will show all
# the property in merlot.properties file.
#
# Note: you could only edit the properties's value which
# start with merlot.prefs.filter's value 
# and merlot.prefs.value.editable=true
merlot.prefs.value.editable=true
merlot.prefs.filter =merlot


# ID Manager
# propname: merlot.idmanager.idtype 
# values: 	none - No ids are generated
#				Users have to enter ids themselves.
#			node_smallest - <Node name>_<mallest open number for node>
#				Ids that become available when nodes are deleted,
#				are re-used 
#			node_highest - <Node name>_<new highest number for node>
#				NOT IMPLEMENTED
#				Ids that become available when nodes are deleted,
#				are not re-used.
#			timestamp - <string of current GMT time as long>
#				The current system time is converted to GMT time
#				and saved as a long value.
#			node_timestamp - <Node name>_<timestamp>
# default: node_smallest
merlot.idmanager.idtype = node_smallest
# propname: merlot.idmanager.log-last-modified
# values: true false
# default: false
merlot.idmanager.log-last-modified = false
# propname: merlot.idmanager.last-modified-attribute
# values: <any attribute name to be used on all elements>
# default: last-modified
merlot.idmanager.last-modified-attribute = last-modified

############################################
## Default editor and plugin path info
############################################

#
# default generic editor
# if non-existent will revert to GenericDOMEditor
merlot.default.editorclass = org.merlotxml.merlot.GenericDOMEditor

# default schema editor - if set to a non-existent class will revert to merlot.default.editorclass
# default is SchemaDOMEditor
# xerlin.default.schema.editorclass = org.merlotxml.merlot.editors.SchemaDOMEditor

# classpath-like list of plugin locations (jars within each directory are
# searched also)
merlot.plugin.path=plugins

# List of global editors, comma delimited
# propname: merlot.editor.classes
#     type: comma delimited fully qualified class names
#  default: none


# Help path - location of of main JavaHelp helpset - can be a file
# or within the jar file below
# If this entry is commented User Help will be preseent in the Editor
# Help menu
# merlot.help.file=doc/UserGuide/JavaHelp/jhelpset.hs
merlot.help.file=jhelpset.hs

# JavaHelp jar file location - if set the resource above will be searched
# for within this archive
merlot.help.jar=doc/UserGuide/JavaHelp/JavaHelp.jar


#########################################
# Editor specific properties
#
# propname: merlot.editor.$EDITORPROP
#
# example: hide certain attributes from elements in the generic editor
# merlot.editor.generic.hide = textinput.problematic, form.action, form.id, form.method
#
# example: make a field readonly
# merlot.editor.generic.readonly = form.version



# example: make it so a type doesn't show up in the add menu 
#  (set the editor to the NullEditor)
# merlot.editor.null.types = progress
#
#
# example: required fields... NOTE: once we have support for reading the
# #REQUIRED in the dtd, this will be obsolete. 
#
# merlot.editor.generic.<dtdrootelem>.manditoryfields = element1,element2,element3=attrname elem=attr1,attr2 
#


# example: invalid chars that the generic editor will check before allowing 
#          a save (this example says periods, commas, and spaces are
#          invalid for the attribute "attrname" on elements of type 
#          "elem1", "elem2", "elem3")
#
# merlot.editor.generic.<dtdrootelem>.invalidchars = elem1,elem2,elem3.attrname=.,{space} 

#
# Icon mapping file
# propname: merlot.icon.props
#     type: properties filename string
#  default: none
# 
merlot.icon.props = this

##############################################
### Stuff that should be in the icon.props file
#
# icon directory
# should be an absolute path 
# propname: merlot.icon.dir
#  default: icons
#
#merlot.icon.dir = file:/someplace/graphics

#
# Icons themselves.
# l = large
# s = small
#

micon.library.s	     = library_s.gif
micon.library.l      = library.gif
micon.libitem.s      = libitem_s.gif
micon.libitem.l      = libitem.gif
micon.libshelf.l     = libshelf.gif
micon.libshelf.s     = libshelf_s.gif

### WebDAV default properties
# These appear in the login dialog
# and can be changed by the user
webdav.server = 192.168.1.105:4000
webdav.path = /taminowebdavserver/SmartRepository

webdav.user = user
# lock timeout
webdav.timeout = 21600

# is proxy required?
webdav.proxy = false
webdav.proxyserver = 192.168.1.106:8080

# Force systems like Mac and Windows to use a JFileChooser
# rather than the AWT FileDialog
# default false
# merlot.jfilechooser=true
